import { Injectable } from '@nestjs/common';
import { GetAllShopsDto, CreateShopDto, ShopDto } from './shop.dto';
import { ShopModel } from '../mongoModels';

@Injectable() // This means that it can be automatically put into other classes of the same module that have it in their constructor
              // For example, ShopController has ShopService in its constructor. This tells NestJS to find a @Injectable ShopService and create a new one
              // and construct a ShopController with it
              // This was automatically generated by "yarn nestgen service shop"
export class ShopService {

  // These are public functions that ShopController calls to do what it needs to do
  async createShop(createShopDto: CreateShopDto, ownerID: string): Promise<ShopDto> {
    const shop = new ShopModel({name: createShopDto.name, description: createShopDto.description, owner: ownerID});
    await shop.save();
    return {
      _id: shop._id.toString(),
      createdAt: "some date",
      description: shop.description,
      name: shop.name,
    }
  }

  async getAllShops(): Promise<GetAllShopsDto> {
    const shops = await ShopModel.find().exec();
    return {
      shops: 
        shops.map(shop => {
      return {
        _id: shop._id.toString(),
        name: shop.name,
        description: shop.description,
        createdAt: "some date",
      }
      })
    };
  }
}
